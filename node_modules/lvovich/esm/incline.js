/* eslint-disable no-use-before-define, no-continue, arrow-parens */
import { getGender, getFG, getLG, getMG } from './gender';
import { constantizeGenderInRules, inclineByRules } from './inclineRules';
import rulesLastname from './rules/inclineRulesLastname';
import rulesMiddlename from './rules/inclineRulesMiddlename';
import rulesFirstname from './rules/inclineRulesFirstname';
constantizeGenderInRules(rulesLastname);
constantizeGenderInRules(rulesMiddlename);
constantizeGenderInRules(rulesFirstname);
export function inclineFirstname(str, declension = 'accusative', gender) {
    return inclineByRules(str, declension, gender || getFG(str), rulesFirstname);
}
export function inclineLastname(str, declension = 'accusative', gender) {
    return inclineByRules(str, declension, gender || getLG(str), rulesLastname);
}
export function inclineMiddlename(str, declension = 'accusative', gender) {
    return inclineByRules(str, declension, gender || getMG(str), rulesMiddlename);
}
export function incline(person, declension) {
    const res = {};
    const gender = getGender(person);
    res.gender = gender;
    const { first, last, middle } = person;
    if (first) {
        res.first = inclineFirstname(first.trim(), declension, gender);
    }
    if (last) {
        res.last = inclineLastname(last.trim(), declension, gender);
    }
    if (middle) {
        res.middle = inclineMiddlename(middle.trim(), declension, gender);
    }
    return res;
}
//# sourceMappingURL=incline.js.map